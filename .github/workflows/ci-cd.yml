name: CI Pipeline

on:
  push:
    branches:
      - main
      - lab9
    paths-ignore:
      - 'docs/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - lab9
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:
    inputs:
      run-static-analysis:
        description: 'ExÃ©cuter les analyses statiques et tests '
        required: true
        default: 'true'
        type: boolean
  schedule:
    - cron: '0 8 * * 1'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: ${{ github.ref == 'refs/heads/main' && 7 || 1 }}

  static-analysis-and-tests:
    needs: build
    runs-on: ubuntu-latest
    container: node:latest
    #if: github.event_name == 'workflow_dispatch' --job is skipped
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.run-static-analysis == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint --fix

      - name: Run static typing check
        run: pnpm tsc --noEmit

      - name: Run unit tests
        run: pnpm test

  deploy-qa:
    runs-on: ubuntu-latest
    container: node:latest
    needs: build
    #if: github.event_name == 'workflow_dispatch'  --job is skipped
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    environment:
      name: QA
      url: https://thankful-meadow-0fb922910-qa.centralus.6.azurestaticapps.net/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Azure Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to QA
        run: swa deploy dist --deployment-token ${{ secrets.QA_DEPLOY_TOKEN }} --env QA


  deploy-prod:
    runs-on: ubuntu-latest
    container: node:latest
    needs: build
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    #if: github.event_name == 'workflow_dispatch'
    environment:
      name: production
      url: https://yellow-rock-024587c03.6.azurestaticapps.net/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Azure Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to Production
        run: swa deploy dist --deployment-token ${{ secrets.PROD_DEPLOY_TOKEN }} --env production
  
  deploy-temp:
      if: github.event_name == 'push' || github.event_name == 'pull_request'
      runs-on: ubuntu-latest
      needs: [build, static-analysis-and-tests]
      environment:
        name: PR-Temporary
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
      
        - name: Download dist artifact
          uses: actions/download-artifact@v4
          with:
            name: dist
            path: dist/
      
        - name: Install Azure CLI
          run: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | bash
            az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
      
        - name: Create temporary Azure Static Web App
          id: create-env
          run: |
            TEMP_APP_NAME="vue2048-temp"
            az staticwebapp create \
              --name $TEMP_APP_NAME \
              --resource-group rg-vue2048-prod \
              --token ${{ secrets.PR_DEPLOY_TOKEN }}
            TEMP_URL=$(az staticwebapp show --name $TEMP_APP_NAME --query "defaultHostname" -o tsv)
            echo "env_url=$TEMP_URL" >> $GITHUB_ENV
            echo "temp_app_name=$TEMP_APP_NAME" >> $GITHUB_ENV
      
        - name: Deploy to temporary environment
          run: |
            npm install -g @azure/static-web-apps-cli
            swa deploy dist --deployment-token ${{ secrets.QA_TEMP_DEPLOY_TOKEN }} --env PR-Temporary
      
        - name: Comment with temp URL 
          if: github.event_name == 'pull_request'
          uses: actions/github-script@v7
          with:
            script: |
              github.rest.issues.createComment({
                body: 'Temporary environment deployed: ${{ env.env_url }}'
              })


  
  create-release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: Release notes for version ${{ github.ref_name }}
          draft: false
          prerelease: false
              
