name: CI Pipeline

on:
  push:
    branches:
      - main
      - lab9
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - main
      - lab9
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:
    inputs:
      run-static-analysis:
        description: 'ExÃ©cuter les analyses statiques et tests '
        required: true
        default: 'true'
        type: boolean
  schedule:
    - cron: '0 8 * * 1'

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: ${{ github.ref == 'refs/heads/main' && 7 || 1 }}

  static-analysis-and-tests:
    needs: build
    runs-on: ubuntu-latest
    container: node:latest
    #if: github.event_name == 'workflow_dispatch' --job is skipped
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.run-static-analysis == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm run lint --fix

      - name: Run static typing check
        run: pnpm tsc --noEmit

      - name: Run unit tests
        run: pnpm test

  deploy-qa:
    runs-on: ubuntu-latest
    container: node:latest
    needs: build
    #if: github.event_name == 'workflow_dispatch'  --job is skipped
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    environment:
      name: QA
      url: https://thankful-meadow-0fb922910-qa.centralus.6.azurestaticapps.net/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Azure Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to QA
        run: swa deploy dist --deployment-token ${{ secrets.QA_DEPLOY_TOKEN }} --env QA


  deploy-prod:
    runs-on: ubuntu-latest
    container: node:latest
    needs: build
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    #if: github.event_name == 'workflow_dispatch'
    environment:
      name: production
      url: https://yellow-rock-024587c03.6.azurestaticapps.net/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Azure Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to Production
        run: swa deploy dist --deployment-token ${{ secrets.PROD_DEPLOY_TOKEN }} --env production

  
  
  deploy-temp:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [build, static-analysis-and-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
  
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

  
      - name: Create temporary environment
        id: create-env
        run: |
          ENV_NAME=vue2048-deploy-temp
          az staticwebapp environment create \
            --name $ENV_NAME \
            --resource-group rg-vue2048-prod \
            --source dist \
            --deployment-token ${{ secrets.QA_TEMP_DEPLOY_TOKEN }}
          echo "env_url=https://$ENV_NAME.azurestaticapps.net" >> $GITHUB_OUTPUT
  
      - name: Comment with temp URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              body: 'Temporary environment deployed: ${{ steps.create-env.outputs.env_url }}'
            })
  
    
